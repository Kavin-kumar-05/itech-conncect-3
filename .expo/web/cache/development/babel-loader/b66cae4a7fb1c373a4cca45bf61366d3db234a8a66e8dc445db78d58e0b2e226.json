{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Classroom from \"./Classroom\";\nimport Home from \"./Home\";\nimport Peer from \"./Peer\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomNavigation() {\n  var navigation = useNavigation();\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(route) {\n      return {\n        headerShown: true,\n        tabBarActiveTintColor: \"#B666D2\",\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size,\n            focused = _ref.focused;\n          var iconName;\n          if (route.route.name === \"Home\") {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.route.name === 'Peer') {\n            iconName = focused ? 'person-add' : 'person-add-outline';\n            size = focused ? size + 8 : size + 5;\n          } else if (route.route.name === 'Class') {\n            iconName = focused ? 'school' : 'school-outline';\n            size = focused ? size + 8 : size + 5;\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Tab.Screen, {\n      name: \"Peer\",\n      component: Peer\n    }), _jsx(Tab.Screen, {\n      name: \"Class\",\n      component: Classroom\n    })]\n  });\n}\n;\nexport default BottomNavigation;","map":{"version":3,"names":["createBottomTabNavigator","StyleSheet","Text","TouchableOpacity","View","Classroom","Home","Peer","Ionicons","useNavigation","jsx","_jsx","jsxs","_jsxs","Tab","BottomNavigation","navigation","Navigator","screenOptions","route","headerShown","tabBarActiveTintColor","tabBarIcon","_ref","color","size","focused","iconName","name","children","Screen","component"],"sources":["C:/Users/Kavin Kumar/Desktop/Programs/React Native/MiniProject2/studentNavScreen/BottomNavigation.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {StyleSheet, Text, TouchableOpacity, View} from 'react-native';\r\nimport Classroom from './Classroom';\r\nimport Home from './Home';\r\nimport Peer from './Peer';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction BottomNavigation() {\r\n  \r\n  const navigation = useNavigation();\r\n  \r\n    return (\r\n    <Tab.Navigator\r\n        screenOptions={(route)=>({\r\n        headerShown:true,\r\n        tabBarActiveTintColor:\"#B666D2\",\r\n        tabBarIcon:({color,size,focused})=>{\r\n            let iconName;\r\n            if(route.route.name === \"Home\"){\r\n                iconName = focused ? 'home' : 'home-outline';\r\n            }else if (route.route.name === 'Peer') {\r\n                iconName = focused ? 'person-add' : 'person-add-outline';\r\n                size = focused ? size + 8 : size+5;\r\n          } else if (route.route.name === 'Class') {\r\n                iconName = focused ? 'school' : 'school-outline';\r\n                size = focused ? size + 8 : size+5;\r\n          }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} /> \r\n        }\r\n        })}\r\n    \r\n    \r\n    \r\n    >\r\n      <Tab.Screen name=\"Home\" component={Home} />\r\n      <Tab.Screen name=\"Peer\" component={Peer} />\r\n      <Tab.Screen name = \"Class\" component={Classroom} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n\r\nexport default BottomNavigation;"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEzE,OAAOC,SAAS;AAChB,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,GAAG,GAAGd,wBAAwB,CAAC,CAAC;AAEtC,SAASe,gBAAgBA,CAAA,EAAG;EAE1B,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAEhC,OACAI,KAAA,CAACC,GAAG,CAACG,SAAS;IACVC,aAAa,EAAE,SAAAA,cAACC,KAAK;MAAA,OAAI;QACzBC,WAAW,EAAC,IAAI;QAChBC,qBAAqB,EAAC,SAAS;QAC/BC,UAAU,EAAC,SAAAA,WAAAC,IAAA,EAAwB;UAAA,IAAtBC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAACC,IAAI,GAAAF,IAAA,CAAJE,IAAI;YAACC,OAAO,GAAAH,IAAA,CAAPG,OAAO;UAC3B,IAAIC,QAAQ;UACZ,IAAGR,KAAK,CAACA,KAAK,CAACS,IAAI,KAAK,MAAM,EAAC;YAC3BD,QAAQ,GAAGD,OAAO,GAAG,MAAM,GAAG,cAAc;UAChD,CAAC,MAAK,IAAIP,KAAK,CAACA,KAAK,CAACS,IAAI,KAAK,MAAM,EAAE;YACnCD,QAAQ,GAAGD,OAAO,GAAG,YAAY,GAAG,oBAAoB;YACxDD,IAAI,GAAGC,OAAO,GAAGD,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAC,CAAC;UACxC,CAAC,MAAM,IAAIN,KAAK,CAACA,KAAK,CAACS,IAAI,KAAK,OAAO,EAAE;YACnCD,QAAQ,GAAGD,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAChDD,IAAI,GAAGC,OAAO,GAAGD,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAC,CAAC;UACxC;UAEE,OAAOd,IAAA,CAACH,QAAQ;YAACoB,IAAI,EAAED,QAAS;YAACF,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QACjE;MACA,CAAC;IAAA,CAAE;IAAAK,QAAA,GAKLlB,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACF,IAAI,EAAC,MAAM;MAACG,SAAS,EAAEzB;IAAK,CAAE,CAAC,EAC3CK,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACF,IAAI,EAAC,MAAM;MAACG,SAAS,EAAExB;IAAK,CAAE,CAAC,EAC3CI,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACF,IAAI,EAAG,OAAO;MAACG,SAAS,EAAE1B;IAAU,CAAE,CAAC;EAAA,CACtC,CAAC;AAEpB;AAAC;AAGD,eAAeU,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}